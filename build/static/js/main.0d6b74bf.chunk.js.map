{"version":3,"sources":["assets/svg/playlist.svg","assets/svg/play.svg","assets/svg/enter.svg","assets/svg/notes.svg","assets/svg/exit.svg","assets/svg/user.svg","assets/svg/karaoke.svg","assets/svg/options_two.svg","assets/svg/previous.svg","assets/svg/playbutton.svg","assets/svg/pause.svg","assets/svg/next.svg","navbar.js","settings.js","components/SongRow.js","songs.js","playlist.js","home.js","player.js","detail.js","login.js","register.js","playlist_detail.js","components/form.js","create_playlist.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","NavLink","exact","to","alt","height","width","src","karaoke","play","playlist","user","href","onClick","logout","exit","enter","notes","Component","app","BASE_URL","LOCAL_BASE_URL","SongRow","hidden","addToQueue","bind","assertThisInitialized","option","e","stopPropagation","setState","data","show_modal","get_playlist","song","FormData","set","snippet","title","description","videoId","audio_file","thumbnails","high","url","channelId","channelTitle","axios","post","headers","Authorization","concat","localStorage","getItem","then","res","response","toast","song_title","id","_this2","delete","remove_song_adapt","now_playing","play_from","set_current","current_list","add_queue","_this3","setPlaying","playing","key","clean","more_options","options_two","showModal","adapt","remove_song","adapt_id","saved_song","lib","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","str","replace","Song","songs","modal_shown","playlist_loading","playlist_selected_song","modal","React","createRef","closeModal","handleOutsideClick","getPlaylist","removeSong","target","current","get","currentSong","filter","item","song_box","map","el","song_instance","stream_url","video_id","channel_title","channel_url","image_url","push","document","addEventListener","removeEventListener","_this4","_this5","ref","handlePlaylistClick","name","length","components_SongRow","close_modal","Playlist","Link","Home","input","redirect","handleChange","value","preventDefault","Redirect","pathname","onSubmit","handleSubmit","type","onChange","placeholder","Player","handlePlay","progress","substring","is_playing","set_play","audio","pause","myAudio","getElementById","style","parseInt","currentTime","duration","next_play","clickPosition","pageX","offsetLeft","offsetWidth","list","song_list","play_location","truncateString","previous","previous_song","playbutton","next","updateCurrent","role","aria-valuenow","aria-valuemin","aria-valuemax","time","autoPlay","keys","defaults","xsrfCookieName","xsrfHeaderName","Detail","is_loading","location","method","Login","username","password","handle_change","prevstate","newState","objectSpread","login_state","handle_login","htmlFor","Register","handle_signup","autoComplete","PlaylistDetail","match","params","Form","form_attribute","submitAction","submitForm","defineProperty","CreatePlaylist","components_form","App","fetch","Content-Type","body","JSON","stringify","json","setItem","token","logged_in","user_id","login_redirect","handle_logout","removeItem","stopLoading","setNowPlaying","setPlay","setCurrentSong","getNextPlay","getPreviousPlay","presentState","instance","indexOf","splice","prevState","toConsumableArray","BrowserRouter","navbar","Route","path","render","home","assign","login","register","detail","src_playlist","component","playlist_detail","player","ReactDOM","src_App_0"],"mappings":"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","file":"static/js/main.0d6b74bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playlist.02358673.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.046923e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/enter.d5087dca.svg\";","module.exports = __webpack_public_path__ + \"static/media/notes.8bdf2406.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit.5348a0f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.2a2ea2f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/karaoke.18bae7b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/options_two.35ea1adf.svg\";","module.exports = __webpack_public_path__ + \"static/media/previous.e8585927.svg\";","module.exports = __webpack_public_path__ + \"static/media/playbutton.2a63962d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.bfb53c3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.eff6edb1.svg\";","import React, {Component} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport playlist from './assets/svg/playlist.svg'\r\nimport play from './assets/svg/play.svg'\r\nimport enter from './assets/svg/enter.svg'\r\nimport notes from './assets/svg/notes.svg'\r\nimport exit from './assets/svg/exit.svg'\r\nimport user from './assets/svg/user.svg'\r\nimport karaoke from './assets/svg/karaoke.svg'\r\n\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"sidebar\">\r\n                    <p className='sidebar-title'>Library</p>\r\n                    <NavLink exact to=\"/\"><img alt={'playlist'} className={'nav-image'} height='20' width='20' src={karaoke}/><span>Home</span></NavLink>\r\n                    <NavLink to=\"/songs/\"><img alt={'playlist'} className={'nav-image'} height='20' width='20' src={play}/><span>Songs</span></NavLink>\r\n                    <NavLink to=\"/playlist/\"><img alt={'playlist'} className={'nav-image'} height='20' width='20'\r\n                                                  src={playlist}/><span>Playlist</span></NavLink>\r\n                    <p className='d-none d-md-block d-lg-block sidebar-title account'>Accounts</p>\r\n                    {\r\n                        this.props.user !== '' ?\r\n                            <div>\r\n                                <NavLink to=\"#\"><img alt={'user'} className={'nav-image'} height='20' width='20'\r\n                                                     src={user}/><span className={'username'}>{this.props.user}</span></NavLink>\r\n                                <a href='#' onClick={this.props.logout}> <img alt={'exit'} className={'nav-image'} height='20' width='20'\r\n                                                                              src={exit}/><span>Logout</span></a>\r\n                            </div>\r\n\r\n                            : <div>\r\n                                <NavLink to=\"/login/\"><img alt={'playlist'} className={'nav-image'} height='20' width='20' src={enter}/><span>Login</span></NavLink>\r\n                                <NavLink to=\"/register/\"><img alt={'playlist'} className={'nav-image'} height='20' width='20'\r\n                                                              src={notes}/><span>Register</span></NavLink>\r\n                            </div>\r\n                    }\r\n\r\n                    <p className='d-none d-md-block d-lg-block sidebar-title copy text-center'>2018 MusicMaxx &copy; All right reserved</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Navbar","/*\r\nDefaults for site\r\n* */\r\nexport const app = {\r\n    BASE_URL: 'http://musicmaxx.herokuapp.com/',\r\n    LOCAL_BASE_URL: 'http://127.0.0.1:8000/',\r\n};","import React, {Component} from 'react';\r\nimport options_two from '../assets/svg/options_two.svg';\r\nimport axios from \"axios/index\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\n\r\nclass SongRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hidden: true,\r\n        };\r\n        this.addToQueue = this.addToQueue.bind(this)\r\n    }\r\n\r\n    static clean(str) {\r\n        let cleaned = str.replace(/vevo/gi, '');\r\n        return cleaned.replace(/official/gi, '');\r\n    }\r\n\r\n    more_options(option, e) {\r\n        e.stopPropagation();\r\n        this.setState({hidden: !this.state.hidden});\r\n    }\r\n\r\n    showModal(data) {\r\n        this.props.show_modal(data);\r\n        this.props.get_playlist();\r\n        this.setState({hidden: !this.state.hidden});\r\n    }\r\n\r\n    playlist_song(song) {\r\n        this.setState({hidden: true});\r\n        let data = new FormData();\r\n        data.set('song_title', song.snippet.title);\r\n        data.set('song_description', song.snippet.description);\r\n        data.set('video_id', song.videoId);\r\n        data.set('stream_url', song.audio_file);\r\n        data.set('image_url', song.snippet.thumbnails.high.url);\r\n        data.set('channel_url', song.snippet.channelId);\r\n        data.set('channel_title', song.snippet.channelTitle);\r\n        data.set('playlist', '2');\r\n\r\n        axios.post(`http://127.0.0.1:8000/playlist_songs/2/`, data, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                let response = res.data;\r\n                toast(response.song_title + ' saved successfully');\r\n            })\r\n    }\r\n\r\n    saved_song(song) {\r\n        this.setState({hidden: true});\r\n        let data = new FormData();\r\n        data.set('song_title', song.snippet.title);\r\n        data.set('song_description', song.snippet.description);\r\n        data.set('video_id', song.videoId.videoId);\r\n        data.set('stream_url', song.audio_file);\r\n        data.set('image_url', song.snippet.thumbnails.high.url);\r\n        data.set('channel_url', song.snippet.channelId);\r\n        data.set('channel_title', song.snippet.channelTitle);\r\n\r\n        axios.post(`http://127.0.0.1:8000/saved_songs/`, data, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                let response = res.data;\r\n                toast(response.song_title + ' saved successfully');\r\n            })\r\n    }\r\n\r\n    remove_song(song, id) {\r\n        this.setState({hidden: true});\r\n        axios.delete(`http://127.0.0.1:8000/remove_saved/${id}/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.props.remove_song_adapt(song);\r\n            })\r\n    }\r\n\r\n    setPlaying(now_playing, play_from) {\r\n        this.props.set_current(this.props.current_list);\r\n        this.props.now_playing(now_playing, play_from)\r\n    }\r\n\r\n    addToQueue(song) {\r\n        this.setState({hidden: true});\r\n        this.props.add_queue(song)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={'song-row'} onClick={() => this.setPlaying(this.props.playing, this.props.play_from)}\r\n                     key={this.props.playing.videoId.videoId}>\r\n                    <div className={'row'}>\r\n                        <div className={'col-md-1 col-sm-2 col-xs-2 col-lg-1'}>\r\n                            <img alt={this.props.playing.snippet.title} width={'80'} height={'80'} src={this.props.playing.snippet.thumbnails.high.url}/>\r\n                        </div>\r\n                        <div className='col-md-11 col-sm-10 col-xs-10 col-lg-11 song-row-body'>\r\n                            <p className={'detail-music-name'}>{SongRow.clean(this.props.playing.snippet.title)}</p>\r\n                            <p className={'detail-music-artist'}>{SongRow.clean(this.props.playing.snippet.channelTitle)}</p>\r\n                            <p className={'detail-music-song'}>Song</p>\r\n                            <div className={'option_container'} onClick={(e) => this.more_options(this.props.playing.snippet.title, e)}>\r\n                                <img alt={'more options'} className={'options'}\r\n                                     src={options_two}/>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'option_list_container'}>\r\n                    <div className={'row'}>\r\n                        <div className={'col-md-1'}/>\r\n                        <div className={'col-md-11'}>\r\n                            {\r\n                                this.state.hidden ? '' : <div className={'option_list'}>\r\n                                    <p onClick={() => this.addToQueue(this.props.playing)}>Add to Queue</p>\r\n                                    <p>Go to Artist</p>\r\n                                    <p onClick={() => this.showModal(this.props.playing)}>Add to Playlist</p>\r\n                                    {this.props.adapt ?\r\n                                        <p onClick={() => this.remove_song(this.props.playing, this.props.adapt_id)}>Remove from Saved Song</p> :\r\n                                        <p onClick={() => this.saved_song(this.props.playing)}>Add to Saved Song</p>}\r\n\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnVisibilityChange\r\n                    draggable\r\n                    pauseOnHover>\r\n                </ToastContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SongRow","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {app} from \"./settings\";\r\nimport SongRow from \"./components/SongRow\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\n\r\nclass Song extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            songs: [],\r\n            modal_shown: false,\r\n            playlist_loading: false,\r\n            playlist: [],\r\n            playlist_selected_song: [],\r\n        };\r\n\r\n        this.modal = React.createRef();\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n        this.getPlaylist = this.getPlaylist.bind(this);\r\n        this.removeSong = this.removeSong.bind(this);\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({modal_shown: false})\r\n    }\r\n\r\n    showModal(data) {\r\n        this.setState({modal_shown: true, playlist_selected_song: data})\r\n    }\r\n\r\n    handleOutsideClick(e) {\r\n        if (e.target === this.modal.current) {\r\n            this.closeModal();\r\n        }\r\n    }\r\n\r\n    getPlaylist() {\r\n        this.setState({playlist_loading: true});\r\n        axios.get(`${app.BASE_URL}playlist/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const playlist = res.data;\r\n                this.setState({playlist});\r\n                this.setState({playlist_loading: false});\r\n            });\r\n    }\r\n\r\n    removeSong(currentSong) {\r\n        let songs = this.state.songs.filter(item => item !== currentSong);\r\n        this.setState({songs});\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*\r\n        * We pass Authorization headers which is the token from local storage\r\n        * instead of passing and saving a user id in the local storage\r\n        * */\r\n        axios.get(`${app.BASE_URL}saved_songs/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const songs = res.data;\r\n                let song_box = [];\r\n\r\n                songs.map(el => {\r\n                    let song_instance = {};\r\n                    song_instance['audio_file'] = el.stream_url;\r\n                    song_instance['id'] = el.id;\r\n\r\n                    song_instance['videoId'] = {};\r\n                    song_instance['videoId']['videoId'] = el.video_id;\r\n                    song_instance['snippet'] = {};\r\n                    song_instance['snippet']['channelTitle'] = el.channel_title;\r\n                    song_instance['snippet']['title'] = el.song_title;\r\n                    song_instance['snippet']['channelId'] = el.channel_url;\r\n                    song_instance['snippet']['thumbnails'] = {};\r\n                    song_instance['snippet']['thumbnails']['high'] = {};\r\n                    song_instance['snippet']['thumbnails']['high']['url'] = el.image_url;\r\n                    song_box.push(song_instance);\r\n                });\r\n                this.setState({songs: song_box});\r\n            });\r\n        document.addEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n\r\n    handlePlaylistClick(song, playlist) {\r\n        let data = new FormData();\r\n        data.set('song_title', song.snippet.title);\r\n        data.set('song_description', song.snippet.description);\r\n        data.set('video_id', song.videoId.videoId);\r\n        data.set('stream_url', song.audio_file);\r\n        data.set('image_url', song.snippet.thumbnails.high.url);\r\n        data.set('channel_url', song.snippet.channelId);\r\n        data.set('channel_title', song.snippet.channelTitle);\r\n        data.set('playlist', playlist);\r\n\r\n        axios.post(`${app.BASE_URL}playlist_songs/${playlist}/`, data, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.closeModal();\r\n                let response = res.data;\r\n                toast(response.song_title + ' has been added to playlist');\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app-container'}>\r\n                <p className='app-menu-name'>Saved Songs</p>\r\n                <h2 className={'result-text'}>Your Saved Songs All In One Place</h2>\r\n\r\n\r\n                <div className={'song-container'}>\r\n\r\n                    {this.state.modal_shown ? <div id=\"myModal\" className=\"modal-max\" ref={this.modal}>\r\n                        <div className=\"modal-content-max\">\r\n                            <div className=\"modal-header-max\">\r\n                                <span className=\"close\" onClick={() => this.closeModal()}>&times;</span>\r\n                                <h2>Select Playlist</h2>\r\n                            </div>\r\n                            <div className=\"modal-body-max\">\r\n                                {this.state.playlist_loading ? <div className=\"lds-ring\">\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                    </div> :\r\n                                    this.state.playlist.map(el => {\r\n                                        return (\r\n                                            <p key={el.id} onClick={() => this.handlePlaylistClick(this.state.playlist_selected_song, el.id)}>{el.name}</p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div> : ''}\r\n\r\n                    {typeof this.state.songs !== 'undefined' && this.state.songs.length > 0 ?\r\n\r\n                        this.state.songs.map(el => {\r\n                            return (\r\n                                <SongRow key={el.id} playing={el} now_playing={this.props.now_playing} play_from={'detail'} adapt={'saved'} adapt_id={el.id}\r\n                                         close_modal={this.closeModal}\r\n                                         get_playlist={this.getPlaylist}\r\n                                         show_modal={this.showModal} set_current={this.props.set_current} current_list={this.state.songs}\r\n                                         remove_song_adapt={this.removeSong} add_queue={this.props.add_queue}/>\r\n                            )\r\n                        }) : ''\r\n                    }</div>\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnVisibilityChange\r\n                    draggable\r\n                    pauseOnHover>\r\n                </ToastContainer>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Song","import React, {Component} from 'react'\r\nimport axios from 'axios';\r\nimport {app} from './settings';\r\nimport Link from \"react-router-dom/es/Link\";\r\n\r\nclass Playlist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playlist: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${app.BASE_URL}playlist`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const playlist = res.data;\r\n                this.setState({playlist})\r\n            });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app-container'}>\r\n                <div className={'row'}>\r\n                    <div className={'col-md-6'}>\r\n                        <p className='app-menu-name'>My Playlists</p>\r\n                        <h2 className={'result-text'}>Sit Back And Enjoy</h2>\r\n                        <Link to={'/playlist_create/'}>Create New Playlist</Link>\r\n                        <div className={'playlist-container play_row'}>\r\n\r\n                            {this.state.playlist.map(el => {\r\n                                return (\r\n\r\n                                    <Link to={`/playlist_detail/${el.id}`} key={el.id}>\r\n                                        <div className={'row'}>\r\n                                            <div className={'col-md-10 playlist-box'}>\r\n                                                <p className={'playlist_link'}>{el.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Playlist","import React, {Component} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            redirect: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let input = e.target.value;\r\n        this.setState({input})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render() {\r\n        const {redirect} = this.state;\r\n        if (redirect) {\r\n            return <Redirect to={\r\n                {\r\n                    pathname: '/detail/',\r\n                    state: {input: this.state.input}\r\n                }\r\n            }/>;\r\n        }\r\n        return (\r\n            <div className={'app-container'}>\r\n                <p className='app-menu-name'>Home</p>\r\n                <h2 className={'result-text'}>Browse & Download Music For Free</h2>\r\n                <h5 className={'musicmaxx-text'}>MusicMaxx gives you instant access to millions of songs – from old favorites to the latest hits. Just hit play\r\n                    to stream anything you\r\n                    like.</h5>\r\n\r\n                <form onSubmit={e => this.handleSubmit(e)}>\r\n                    <input type='text' value={this.state.input} onChange={e => this.handleChange(e)} className={'search'} placeholder={'Enter song name'}/>\r\n                </form>\r\n                <p className={'search-phrase'}>Search for songs, artists and genres</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, {Component} from 'react';\r\nimport previous from './assets/svg/previous.svg';\r\nimport playbutton from './assets/svg/playbutton.svg';\r\nimport pause from './assets/svg/pause.svg';\r\nimport next from './assets/svg/next.svg';\r\n\r\nclass Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.progress = React.createRef();\r\n\r\n    }\r\n\r\n    truncateString(str, length) {\r\n        return str.length > length ? str.substring(0, length - 3) + '...' : str\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.is_playing) {\r\n            this.props.set_play();\r\n            this.audio.pause();\r\n        } else {\r\n            this.props.set_play();\r\n            this.audio.play();\r\n        }\r\n    }\r\n    // test\r\n\r\n    componentDidMount() {\r\n\r\n        const nx = () => {\r\n            this.props.next_play()\r\n        };\r\n        const myAudio = this.audio;\r\n        this.audio.addEventListener('timeupdate', function () {\r\n            document.getElementById('play-bar').style.width = parseInt(((myAudio.currentTime / myAudio.duration) * 100), 10) + \"%\";\r\n        });\r\n\r\n        this.audio.addEventListener('ended', function () {\r\n            myAudio.currentTime = 0;\r\n            nx();\r\n        })\r\n    };\r\n\r\n    updateCurrent(e) {\r\n        let clickPosition = (e.pageX - this.progress.current.offsetLeft) / this.progress.current.offsetWidth;\r\n        // move the playhead to the correct position\r\n        this.audio.currentTime = clickPosition * 180;\r\n    }\r\n\r\n    clean(str) {\r\n        let cleaned = str.replace(/vevo/gi, '');\r\n        return cleaned.replace(/official/gi, '');\r\n    }\r\n\r\n    render() {\r\n        let list;\r\n        let song_list;\r\n        const {song} = this.props;\r\n        if (this.props.play_location === 'detail') {\r\n            list = <div className={'player'}>\r\n                <div className={'player-container'}>\r\n                    <div className={'row'}>\r\n                        <div className={'col-md-2 col-sm-4'}>\r\n                            <img src={song.snippet.thumbnails.high.url} alt={'artwork'} className={'track-artwork'}/>\r\n                            <p className={'track-name'}>{this.clean(this.truncateString(song.snippet.title, 17))}</p>\r\n                            <p className={'track-artist'}>{this.clean(this.truncateString(song.snippet.channelTitle, 20))}</p>\r\n                        </div>\r\n                        <div className={'col-md-2 col-sm-2 control-container'}>\r\n                            <p className={'player-controls'}><img src={previous} alt={'previous'} onClick={() => this.props.previous_song()}/>\r\n                                <img className={'middle-control'} src={this.props.is_playing ? pause : playbutton} onClick={() => this.handlePlay()}\r\n                                     alt={'pause'}/> <img\r\n                                    src={next} onClick={() => this.props.next_play()} alt={'next'}/></p>\r\n                        </div>\r\n                        <div className={'col-md-5 col-sm-5 control-container'}>\r\n                            <div className=\"progress\" id=\"base-progress\" onClick={e => this.updateCurrent(e)} ref={this.progress}>\r\n                                <div className=\"progress-bar\" id=\"play-bar\" role=\"progressbar\"\r\n                                     aria-valuenow=\"75\" aria-valuemin=\"0\"\r\n                                     aria-valuemax=\"100\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={'col-md-2'}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n            song_list = song.audio_file;\r\n        }\r\n        return (\r\n            <div>\r\n                <audio id=\"player\" className={song.time} ref={(audio) => {\r\n                    this.audio = audio\r\n                }} src={song_list} autoPlay/>\r\n                {Object.keys(this.props.song).length !== 0 ? list : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Player","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SongRow from './components/SongRow';\r\nimport {app} from \"./settings\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nclass Detail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            songs: [],\r\n            modal_shown: false,\r\n            playlist_loading: false,\r\n            playlist: [],\r\n            playlist_selected_song: [],\r\n            is_loading: true,\r\n        };\r\n        this.modal = React.createRef();\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n        this.getPlaylist = this.getPlaylist.bind(this);\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({modal_shown: false})\r\n    }\r\n\r\n    showModal(data) {\r\n        this.setState({modal_shown: true, playlist_selected_song: data})\r\n    }\r\n\r\n    handleOutsideClick(e) {\r\n        if (e.target === this.modal.current) {\r\n            this.closeModal();\r\n        }\r\n    }\r\n\r\n    getPlaylist() {\r\n        this.setState({playlist_loading: true});\r\n        axios.get(`${app.BASE_URL}playlist/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const playlist = res.data;\r\n                this.setState({playlist});\r\n                this.setState({playlist_loading: false});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.retrieve_song(this.props.location.state.input);\r\n        let data = new FormData();\r\n        data.set('q', this.props.location.state.input);\r\n        axios({\r\n            method: 'post',\r\n            url: `${app.BASE_URL}search/`,\r\n            data: data,\r\n        }).then(res => {\r\n            let songs = res.data;\r\n            this.setState({is_loading: false});\r\n            this.setState({songs});\r\n        });\r\n        document.addEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n    handlePlaylistClick(song, playlist) {\r\n        let data = new FormData();\r\n        data.set('song_title', song.snippet.title);\r\n        data.set('song_description', song.snippet.description);\r\n        data.set('video_id', song.videoId.videoId);\r\n        data.set('stream_url', song.audio_file);\r\n        data.set('image_url', song.snippet.thumbnails.high.url);\r\n        data.set('channel_url', song.snippet.channelId);\r\n        data.set('channel_title', song.snippet.channelTitle);\r\n        data.set('playlist', playlist);\r\n\r\n        axios.post(`http://127.0.0.1:8000/playlist_songs/${playlist}/`, data, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.closeModal();\r\n                let response = res.data;\r\n                toast(response.song_title + ' has been added to playlist');\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app-container'}>\r\n\r\n                <p className='app-menu-name'>Results Page</p>\r\n                <h2 className={'result-text'}><span className={'result-span'}>Showing songs for </span>\"{this.props.location.state.input}\"</h2>\r\n                <h5>Top Results</h5>\r\n                <div className={'song-container'}>\r\n\r\n                    {this.state.modal_shown ? <div id=\"myModal\" className=\"modal-max\" ref={this.modal}>\r\n                        <div className=\"modal-content-max\">\r\n                            <div className=\"modal-header-max\">\r\n                                <span className=\"close\" onClick={() => this.closeModal()}>&times;</span>\r\n                                <h2>Select Playlist</h2>\r\n                            </div>\r\n                            <div className=\"modal-body-max\">\r\n                                {this.state.playlist_loading ? <div className=\"lds-ring\">\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                    </div> :\r\n                                    this.state.playlist.map(el => {\r\n                                        return (\r\n                                            <p key={el.id} onClick={() => this.handlePlaylistClick(this.state.playlist_selected_song, el.id)}>{el.name}</p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div> : ''}\r\n                    {this.state.is_loading ?\r\n                        <div className=\"lds-facebook\">\r\n                            <div/>\r\n                            <div/>\r\n                            <div/>\r\n                        </div> : ''}\r\n                    {typeof this.state.songs !== 'undefined' && this.state.songs.length > 0 ?\r\n\r\n                        this.state.songs.map(el => {\r\n                            return (\r\n                                <SongRow playing={el} now_playing={this.props.now_playing} play_from={'detail'} close_modal={this.closeModal}\r\n                                         get_playlist={this.getPlaylist}\r\n                                         show_modal={this.showModal} set_current={this.props.set_current} current_list={this.state.songs}\r\n                                         add_queue={this.props.add_queue}/>\r\n                            )\r\n                        }) : ''\r\n                    }</div>\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnVisibilityChange\r\n                    draggable\r\n                    pauseOnHover>\r\n                </ToastContainer>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n    handle_change = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = {...prevstate};\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let redirect = this.props.login_state;\r\n        if (redirect) {\r\n            return <Redirect to={\r\n                {\r\n                    pathname: '/',\r\n                }\r\n            }/>;\r\n        }\r\n        return (\r\n            <div className={'app-container'}>\r\n                <div className={'row'}>\r\n                    <div className={'col-md-6'}>\r\n                        <p className='app-menu-name'>Accounts {this.props.login_state}</p>\r\n                        <h2 className={'result-text'}>Login Today For An Amazing Experience</h2>\r\n                        <div className={'form-container'}>\r\n                            <form onSubmit={e => this.props.handle_login(e, this.state)}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <input className=\"form-control\"\r\n                                           name=\"username\"\r\n                                           value={this.state.username}\r\n                                           onChange={this.handle_change}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input className=\"form-control\"\r\n                                           type=\"password\"\r\n                                           name=\"password\"\r\n                                           value={this.state.password}\r\n                                           onChange={this.handle_change}\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n    handle_change = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = {...prevstate};\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app-container'}>\r\n                <div className={'row'}>\r\n                    <div className={'col-md-6'}>\r\n                        <p className='app-menu-name'>Accounts</p>\r\n                        <h2 className={'result-text'}>Register Today For An Amazing Experience</h2>\r\n                        <div className={'form-container'}>\r\n                            <form onSubmit={e => this.props.handle_signup(e, this.state)}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <input className=\"form-control\"\r\n                                           type=\"text\"\r\n                                           name=\"username\"\r\n                                           value={this.state.username}\r\n                                           onChange={this.handle_change}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password} autoComplete=\"current-password\"\r\n                                        onChange={this.handle_change}\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {app} from \"./settings\";\r\nimport SongRow from \"./components/SongRow\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass PlaylistDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            songs: [],\r\n            modal_shown: false,\r\n            playlist_loading: false,\r\n            playlist: [],\r\n            playlist_selected_song: [],\r\n        };\r\n\r\n        this.modal = React.createRef();\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n        this.getPlaylist = this.getPlaylist.bind(this);\r\n    }\r\n\r\n\r\n    closeModal() {\r\n        this.setState({modal_shown: false})\r\n    }\r\n\r\n    showModal(data) {\r\n        this.setState({modal_shown: true, playlist_selected_song: data})\r\n    }\r\n\r\n    handleOutsideClick(e) {\r\n        if (e.target === this.modal.current) {\r\n            this.closeModal();\r\n        }\r\n    }\r\n\r\n    getPlaylist() {\r\n        this.setState({playlist_loading: true});\r\n        axios.get(`${app.BASE_URL}playlist/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const playlist = res.data;\r\n                this.setState({playlist});\r\n                this.setState({playlist_loading: false});\r\n            });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(`${app.BASE_URL}playlist_songs/${this.props.match.params.id}/`, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                const songs = res.data;\r\n                let song_box = [];\r\n\r\n                songs.map(el => {\r\n                    let song_instance = {};\r\n                    song_instance['audio_file'] = el.stream_url;\r\n\r\n                    song_instance['videoId'] = {};\r\n                    song_instance['videoId']['videoId'] = el.video_id;\r\n                    song_instance['snippet'] = {};\r\n                    song_instance['snippet']['channelTitle'] = el.channel_title;\r\n                    song_instance['snippet']['title'] = el.song_title;\r\n                    song_instance['snippet']['channelId'] = el.channel_url;\r\n                    song_instance['snippet']['thumbnails'] = {};\r\n                    song_instance['snippet']['thumbnails']['high'] = {};\r\n                    song_instance['snippet']['thumbnails']['high']['url'] = el.image_url;\r\n                    song_box.push(song_instance);\r\n                });\r\n                this.setState({songs: song_box})\r\n            });\r\n        document.addEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleOutsideClick, false);\r\n    }\r\n\r\n    handlePlaylistClick(song, playlist) {\r\n        let data = new FormData();\r\n        data.set('song_title', song.snippet.title);\r\n        data.set('song_description', song.snippet.description);\r\n        data.set('video_id', song.videoId.videoId);\r\n        data.set('stream_url', song.audio_file);\r\n        data.set('image_url', song.snippet.thumbnails.high.url);\r\n        data.set('channel_url', song.snippet.channelId);\r\n        data.set('channel_title', song.snippet.channelTitle);\r\n        data.set('playlist', playlist);\r\n\r\n        axios.post(`http://127.0.0.1:8000/playlist_songs/${playlist}/`, data, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.closeModal();\r\n                let response = res.data;\r\n                toast(response.song_title + ' has been added to playlist');\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'app-container'}>\r\n\r\n                <p className='app-menu-name'>My Playlists</p>\r\n                <h2 className={'result-text'}>Sit Back And Enjoy</h2>\r\n\r\n                <div className={'song-container'}>\r\n\r\n                    {this.state.modal_shown ? <div id=\"myModal\" className=\"modal-max\" ref={this.modal}>\r\n                        <div className=\"modal-content-max\">\r\n                            <div className=\"modal-header-max\">\r\n                                <span className=\"close\" onClick={() => this.closeModal()}>&times;</span>\r\n                                <h2>Select Playlist</h2>\r\n                            </div>\r\n                            <div className=\"modal-body-max\">\r\n                                {this.state.playlist_loading ? <div className=\"lds-ring\">\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                        <div/>\r\n                                    </div> :\r\n                                    this.state.playlist.map(el => {\r\n                                        return (\r\n                                            <p key={el.id}\r\n                                               onClick={() => this.handlePlaylistClick(this.state.playlist_selected_song, el.id)}>{el.name}</p>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div> : ''}\r\n\r\n                    {typeof this.state.songs !== 'undefined' && this.state.songs.length > 0 ?\r\n\r\n                        this.state.songs.map(el => {\r\n                            return (\r\n                                <SongRow playing={el} now_playing={this.props.now_playing} play_from={'detail'} close_modal={this.closeModal}\r\n                                         get_playlist={this.getPlaylist}\r\n                                         show_modal={this.showModal} set_current={this.props.set_current} current_list={this.state.songs} add_queue={this.props.add_queue}/>\r\n                            )\r\n                        }) : <p>There are no songs here <Link to={'/songs/'}>Add songs to Playlist</Link></p>\r\n                    }</div>\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnVisibilityChange\r\n                    draggable\r\n                    pauseOnHover>\r\n                </ToastContainer>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaylistDetail","import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.props.form_attribute.map(el => {\r\n            this.state[el.name] = '';\r\n        });\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault();\r\n        this.props.submitAction(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-md-6'}>\r\n                <div className={'form-container'}>\r\n                    <form onSubmit={e => this.submitForm(e)}>\r\n                        {\r\n                            this.props.form_attribute.map(el => {\r\n                                if (el.type === 'textarea') {\r\n                                    return (\r\n                                        <div className=\"form-group\" key={el.name}>\r\n                                            <label className={'upper'} htmlFor={el.name}>{el.name}</label>\r\n                                            <textarea className=\"form-control\" name={el.name} placeholder={el.placeholder} value={this.state[el.name]}\r\n                                                      onChange={(e) => this.setState({[el.name]: e.target.value})}/>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return (\r\n                                    <div className=\"form-group\" key={el.name}>\r\n                                        <label className={'upper'} htmlFor={el.name}>{el.name}</label>\r\n                                        <input className=\"form-control\" name={el.name} placeholder={el.placeholder} value={this.state[el.name]}\r\n                                               type={el.type}\r\n                                               onChange={(e) => this.setState({[el.name]: e.target.value})}/>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form","import React, {Component} from 'react'\r\nimport Form from './components/form';\r\nimport axios from 'axios';\r\nimport {app} from './settings';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass CreatePlaylist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        };\r\n        this.submitAction = this.submitAction.bind(this);\r\n    }\r\n\r\n    submitAction(state) {\r\n        axios.post(`${app.BASE_URL}playlist/`, state, {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                let response = res.data;\r\n                this.setState({redirect: true})\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let redirect = this.state.redirect;\r\n        if (redirect) {\r\n            return <Redirect to={\r\n                {\r\n                    pathname: '/playlist/',\r\n                }\r\n            }/>;\r\n        }\r\n\r\n        const formBuilder = [\r\n            {\r\n                name: 'name',\r\n                placeholder: 'Playlist Name',\r\n                type: 'text'\r\n            },\r\n            {\r\n                name: 'description',\r\n                placeholder: 'Description',\r\n                type: 'textarea'\r\n            }\r\n        ];\r\n        return (\r\n            <div className={'app-container'}>\r\n                <div className={'col-md-6'}>\r\n                    <p className='app-menu-name'>Create New Playlist</p>\r\n                    <h2 className={'result-text'}>Make or Break Playlist here</h2>\r\n                </div>\r\n                <Form submitAction={this.submitAction} form_attribute={formBuilder}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePlaylist","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./navbar\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport Song from \"./songs\";\nimport Playlist from \"./playlist\";\nimport Home from \"./home\";\nimport Player from \"./player\";\nimport Detail from \"./detail\";\nimport Login from \"./login\";\nimport Register from \"./register\";\nimport {app} from './settings';\nimport PlaylistDetail from \"./playlist_detail\";\nimport CreatePlaylist from \"./create_playlist\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged_in: !!localStorage.getItem('token'),\n            username: '',\n            user_id: '',\n            songs: [],\n            is_loading: true,\n            is_playing: false,\n            now_playing: {},\n            next_play: {},\n            login_redirect: false,\n            play_from: '',\n\n        };\n\n        this.stopLoading = this.stopLoading.bind(this);\n        this.setNowPlaying = this.setNowPlaying.bind(this);\n        this.setPlay = this.setPlay.bind(this);\n        this.setCurrentSong = this.setCurrentSong.bind(this);\n        this.getNextPlay = this.getNextPlay.bind(this);\n        this.getPreviousPlay = this.getPreviousPlay.bind(this);\n        this.addToQueue = this.addToQueue.bind(this);\n    }\n\n    addToQueue(song) {\n        let presentState = this.state.songs;\n        let instance = this.state.songs.indexOf(this.state.now_playing);\n        presentState.splice(instance + 1, 0, song);\n        // this.setState({songs: presentState});\n        this.setState(prevState => ({\n            songs: [...prevState.songs].splice(instance + 1, 0, song)\n        }))\n    }\n\n    handle_login = (e, data) => {\n        e.preventDefault();\n        fetch(`${app.BASE_URL}token-auth/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                localStorage.setItem('id', json.user.id);\n                this.setState({\n                    logged_in: true,\n                    username: json.user.username,\n                    user_id: json.user.id,\n                    login_redirect: true,\n                });\n            });\n    };\n\n    handle_signup = (e, data) => {\n        e.preventDefault();\n        fetch(`${app.BASE_URL}users/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                localStorage.setItem('id', json.id);\n                this.setState({\n                    logged_in: true,\n                    username: json.username,\n                    user_id: json.id,\n                });\n            });\n    };\n\n    handle_logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('id');\n        this.setState({logged_in: false, username: '', user_id: '', login_redirect: false});\n    };\n\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            fetch(`${app.BASE_URL}current_user/`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => res.json())\n                .then(json => {\n                    localStorage.setItem('id', json.id);\n                    this.setState({username: json.username, user_id: json.id});\n                });\n        }\n    }\n\n    setNowPlaying(now_playing, play_from) {\n\n        if (this.state.songs.indexOf(now_playing) === 0) {\n            this.setState({next_play: this.state.songs[1]})\n        } else {\n            this.setState({next_play: this.state.songs[0]})\n        }\n\n        this.setState({now_playing: now_playing, is_playing: true, play_from: play_from});\n\n    }\n\n    getNextPlay() {\n        let instance = this.state.songs.indexOf(this.state.now_playing);\n\n        if (this.state.songs[this.state.songs.length - 1] === this.state.now_playing) {\n            return\n        }\n        this.setState({now_playing: this.state.songs[instance + 1]})\n    }\n\n    getPreviousPlay() {\n        let instance = this.state.songs.indexOf(this.state.now_playing);\n\n        if (this.state.songs[0] === this.state.now_playing) {\n            return\n        }\n        this.setState({now_playing: this.state.songs[instance - 1]})\n\n    }\n\n\n    stopLoading() {\n        this.setState({is_loading: false})\n    }\n\n    setPlay() {\n        this.setState({is_playing: !this.state.is_playing});\n    };\n\n\n    setCurrentSong(songs) {\n        this.setState({songs})\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Navbar logout={this.handle_logout} user={this.state.username}/>\n                    <div className={'content'}>\n                        <Route exact path=\"/\" render={(props) => <Home {...props} />}/>\n                        <Route path=\"/songs/\"\n                               render={(props) => <Song {...props} user_id={this.state.user_id} now_playing={this.setNowPlaying} add_queue={this.addToQueue}\n                                                        set_current={this.setCurrentSong}/>}/>\n                        <Route path=\"/login/\" render={(props) => <Login {...props} handle_login={this.handle_login} login_state={this.state.login_redirect}/>}/>\n                        <Route path=\"/register/\" render={(props) => <Register {...props} handle_signup={this.handle_signup}/>}/>\n                        <Route path=\"/detail/\"\n                               render={(props) => <Detail  {...props} add_queue={this.addToQueue}\n                                                           is_loading={this.state.is_loading} now_playing={this.setNowPlaying}\n                                                           set_current={this.setCurrentSong}\n                               />}/>\n                        <Route path=\"/playlist/\" render={(props) => <Playlist {...props} now_playing={this.setNowPlaying}/>}/>\n                        <Route path=\"/playlist_create/\" component={CreatePlaylist}/>\n                        <Route path=\"/playlist_detail/:id\"\n                               render={(props) => <PlaylistDetail {...props} now_playing={this.setNowPlaying} add_queue={this.addToQueue}\n                                                                  set_current={this.setCurrentSong}/>}/>\n                    </div>\n                    <Player song={this.state.now_playing} is_playing={this.state.is_playing} set_play={this.setPlay}\n                            play_location={this.state.play_from} next_play={this.getNextPlay} previous_song={this.getPreviousPlay}/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}